{"ast":null,"code":"var _jsxFileName = \"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN (Academind)/fligno/front-end/src/posts/pages/UserPosts.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport PostsCatalog from \"../components/PostsCatalog\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../global/components/front-end-comps/http\";\nimport { useState } from \"react\";\nimport { CommonLoading } from \"react-loadingg\";\n\nconst UserPosts = props => {\n  const {\n    isLoading,\n    sendRequest\n  } = useHttpClient();\n  const [loadedPost, setLoadedPost] = useState().userId;\n  const userId = useParams().userId;\n  useEffect(async () => {\n    const fetchPosts = async () => {\n      try {\n        const resData = await sendRequest(`http://localhost:5001/api/posts/user/${userId}`);\n        setLoadedPost(resData.posts);\n      } catch (err) {}\n    };\n\n    fetchPosts();\n  }, [sendRequest, userId]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(CommonLoading, {\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(PostsCatalog, {\n    bits: loadedPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), \" \");\n};\n\nexport default UserPosts;","map":{"version":3,"sources":["/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN (Academind)/fligno/front-end/src/posts/pages/UserPosts.js"],"names":["React","useEffect","Fragment","PostsCatalog","useParams","useHttpClient","useState","CommonLoading","UserPosts","props","isLoading","sendRequest","loadedPost","setLoadedPost","userId","fetchPosts","resData","posts","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,8CAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BN,aAAa,EAAhD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,GAAGQ,MAA/C;AAEA,QAAMA,MAAM,GAAGV,SAAS,GAAGU,MAA3B;AAEAb,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMc,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,OAAO,GAAG,MAAML,WAAW,CAC9B,wCAAuCG,MAAO,EADhB,CAAjC;AAGAD,QAAAA,aAAa,CAACG,OAAO,CAACC,KAAT,CAAb;AACD,OALD,CAKE,OAAOC,GAAP,EAAY,CAAE;AACjB,KAPD;;AAQAH,IAAAA,UAAU;AACX,GAVQ,EAUN,CAACJ,WAAD,EAAcG,MAAd,CAVM,CAAT;;AAYA,MAAIJ,SAAJ,EAAe;AACb,wBAAO,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAEqC,GAFrC,CADF;AAMD,CA5BD;;AA8BA,eAAeJ,SAAf","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\nimport PostsCatalog from \"../components/PostsCatalog\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../global/components/front-end-comps/http\";\nimport { useState } from \"react\";\nimport { CommonLoading } from \"react-loadingg\";\n\nconst UserPosts = (props) => {\n  const { isLoading, sendRequest } = useHttpClient();\n  const [loadedPost, setLoadedPost] = useState().userId;\n\n  const userId = useParams().userId;\n\n  useEffect(async () => {\n    const fetchPosts = async () => {\n      try {\n        const resData = await sendRequest(\n          `http://localhost:5001/api/posts/user/${userId}`\n        );\n        setLoadedPost(resData.posts);\n      } catch (err) {}\n    };\n    fetchPosts();\n  }, [sendRequest, userId]);\n\n  if (isLoading) {\n    return <CommonLoading color=\"grey\" />;\n  }\n\n  return (\n    <Fragment>\n      {\" \"}\n      <PostsCatalog bits={loadedPost} />{\" \"}\n    </Fragment>\n  );\n};\n\nexport default UserPosts;\n"]},"metadata":{},"sourceType":"module"}