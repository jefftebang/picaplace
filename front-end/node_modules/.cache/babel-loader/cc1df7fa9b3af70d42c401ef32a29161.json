{"ast":null,"code":"var _jsxFileName = \"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN (Academind)/fligno/front-end/src/App.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Users from \"./user/pages/Users\";\nimport NewPost from \"./posts/pages/NewPost\";\nimport MainNav from \"./global/components/Navbar/MainNav\";\nimport UserPosts from \"./posts/pages/UserPosts\";\nimport UpdatePost from \"./posts/pages/UpdatePost\";\nimport Auth from \"./user/pages/Auth\";\nimport UserContext from \"./global/context/UserContext\";\nimport user from \"../../back-end/models/user\";\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n\n      const tokenRes = await axios.post(\"http://localhost:5001/api/users/tokenIsValid\", null, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n\n      if (tokenRes.data) {\n        const userRes = await axios.get(\"http://localhost:5001/api/users\", {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  let routes;\n\n  if (userData.user) {\n    routes = /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/:userId/posts\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UserPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/posts/new\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NewPost, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/posts/:postId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UpdatePost, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    routes = /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Users, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Auth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      userData,\n      setUserData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN (Academind)/fligno/front-end/src/App.js"],"names":["React","useState","useEffect","Fragment","BrowserRouter","Router","Switch","Route","Redirect","axios","Users","NewPost","MainNav","UserPosts","UpdatePost","Auth","UserContext","user","App","userData","setUserData","token","undefined","checkLoggedIn","localStorage","getItem","setItem","tokenRes","post","headers","data","userRes","get","routes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport Users from \"./user/pages/Users\";\nimport NewPost from \"./posts/pages/NewPost\";\nimport MainNav from \"./global/components/Navbar/MainNav\";\nimport UserPosts from \"./posts/pages/UserPosts\";\nimport UpdatePost from \"./posts/pages/UpdatePost\";\nimport Auth from \"./user/pages/Auth\";\nimport UserContext from \"./global/context/UserContext\";\nimport user from \"../../back-end/models/user\";\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await axios.post(\n        \"http://localhost:5001/api/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await axios.get(\"http://localhost:5001/api/users\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  let routes;\n  if (userData.user) {\n    routes = (\n      <Fragment>\n        <Route path=\"/:userId/posts\" exact>\n          <UserPosts />\n        </Route>\n        <Route path=\"/posts/new\" exact>\n          <NewPost />\n        </Route>\n        <Route path=\"/posts/:postId\">\n          <UpdatePost />\n        </Route>\n      </Fragment>\n    );\n  } else {\n    routes = (\n      <Fragment>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Router>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <MainNav />\n        <Switch></Switch>\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}