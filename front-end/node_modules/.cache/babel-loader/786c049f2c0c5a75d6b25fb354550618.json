{"ast":null,"code":"var _jsxFileName = \"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/src/global/components/front-end-comps/Map.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Map.css\";\n\nconst Map = props => {\n  const [map, setMap] = useState(null);\n  const mapContainer = useRef(null);\n  const {\n    center,\n    zoom\n  } = props;\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiamVmZnRlYmFuZzAxMTgiLCJhIjoiY2tkbGp0bTJvMG83ZjJycGZuaXNod3JrYSJ9.cCOBm77H7fIlkMDRU9_EqQ\";\n\n    const initializeMap = ({\n      setMap,\n      mapContainer\n    }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        // stylesheet location\n        center: [center.Longitude, center.Latitude],\n        zoom: zoom\n      });\n      const marker = new mapboxgl.Marker().setLngLat([center.Longitude, center.Latitude]).addTo(map);\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n        var layers = map.getStyle().layers;\n        var labelLayerId;\n\n        for (var i = 0; i < layers.length; i++) {\n          if (layers[i].type === \"symbol\" && layers[i].layout[\"text-field\"]) {\n            labelLayerId = layers[i].id;\n            break;\n          }\n        }\n\n        map.addLayer({\n          id: \"3d-buildings\",\n          source: \"composite\",\n          \"source-layer\": \"building\",\n          filter: [\"==\", \"extrude\", \"true\"],\n          type: \"fill-extrusion\",\n          minzoom: 15,\n          paint: {\n            \"fill-extrusion-color\": \"#aaa\",\n            // use an 'interpolate' expression to add a smooth transition effect to the\n            // buildings as the user zooms in\n            \"fill-extrusion-height\": [\"interpolate\", [\"linear\"], [\"zoom\"], 15, 0, 15.05, [\"get\", \"height\"]],\n            \"fill-extrusion-base\": [\"interpolate\", [\"linear\"], [\"zoom\"], 15, 0, 15.05, [\"get\", \"min_height\"]],\n            \"fill-extrusion-opacity\": 0.6\n          }\n        }, labelLayerId);\n      });\n    };\n\n    if (!map) initializeMap({\n      setMap,\n      mapContainer\n    });\n  }, [center, zoom, map]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/src/global/components/front-end-comps/Map.js"],"names":["React","useEffect","useRef","useState","mapboxgl","Map","props","map","setMap","mapContainer","center","zoom","accessToken","initializeMap","container","current","style","Longitude","Latitude","marker","Marker","setLngLat","addTo","on","resize","layers","getStyle","labelLayerId","i","length","type","layout","id","addLayer","source","filter","minzoom","paint","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Map.css\";\n\nconst Map = (props) => {\n  const [map, setMap] = useState(null);\n  const mapContainer = useRef(null);\n\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiamVmZnRlYmFuZzAxMTgiLCJhIjoiY2tkbGp0bTJvMG83ZjJycGZuaXNod3JrYSJ9.cCOBm77H7fIlkMDRU9_EqQ\";\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n        center: [center.Longitude, center.Latitude],\n        zoom: zoom,\n      });\n\n      const marker = new mapboxgl.Marker()\n        .setLngLat([center.Longitude, center.Latitude])\n        .addTo(map);\n\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n        var layers = map.getStyle().layers;\n\n        var labelLayerId;\n        for (var i = 0; i < layers.length; i++) {\n          if (layers[i].type === \"symbol\" && layers[i].layout[\"text-field\"]) {\n            labelLayerId = layers[i].id;\n            break;\n          }\n        }\n        map.addLayer(\n          {\n            id: \"3d-buildings\",\n            source: \"composite\",\n            \"source-layer\": \"building\",\n            filter: [\"==\", \"extrude\", \"true\"],\n            type: \"fill-extrusion\",\n            minzoom: 15,\n            paint: {\n              \"fill-extrusion-color\": \"#aaa\",\n\n              // use an 'interpolate' expression to add a smooth transition effect to the\n              // buildings as the user zooms in\n              \"fill-extrusion-height\": [\n                \"interpolate\",\n                [\"linear\"],\n                [\"zoom\"],\n                15,\n                0,\n                15.05,\n                [\"get\", \"height\"],\n              ],\n              \"fill-extrusion-base\": [\n                \"interpolate\",\n                [\"linear\"],\n                [\"zoom\"],\n                15,\n                0,\n                15.05,\n                [\"get\", \"min_height\"],\n              ],\n              \"fill-extrusion-opacity\": 0.6,\n            },\n          },\n          labelLayerId\n        );\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, [center, zoom, map]);\n\n  return <div ref={(el) => (mapContainer.current = el)} className=\"map\" />;\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}