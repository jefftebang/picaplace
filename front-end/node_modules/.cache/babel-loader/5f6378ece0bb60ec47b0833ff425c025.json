{"ast":null,"code":"import _regeneratorRuntime from\"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useParams,useHistory}from\"react-router-dom\";import{MDBContainer,MDBRow,MDBCol,MDBInput,MDBBtn}from\"mdbreact\";import CardCatalog from\"../../global/components/front-end-comps/CardCatalog\";import{CommonLoading}from\"react-loadingg\";var UpdatePost=function UpdatePost(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(props.location.state.description),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var history=useHistory();var postId=useParams().postId;var postUpdateHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var apiOptions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();setIsLoading(true);apiOptions={method:\"PATCH\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({description:description})};fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/posts/\").concat(postId),apiOptions).then(function(res){return res.json();}).then(function(res){setDescription(\"\");setIsLoading(false);history.push(\"/\".concat(sessionStorage.getItem(\"creator\"),\"/posts\"));});case 4:case\"end\":return _context.stop();}}},_callee);}));return function postUpdateHandler(_x){return _ref.apply(this,arguments);};}();if(!postId){return/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Cannot find your post.\"));}if(isLoading){return/*#__PURE__*/React.createElement(CommonLoading,{color:\"grey\"});}return/*#__PURE__*/React.createElement(CardCatalog,{className:\"post-form\"},/*#__PURE__*/React.createElement(MDBContainer,null,/*#__PURE__*/React.createElement(MDBRow,null,/*#__PURE__*/React.createElement(MDBCol,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:postUpdateHandler},/*#__PURE__*/React.createElement(\"p\",{className:\"h5 mb-5\"},\"Edit description here:\"),/*#__PURE__*/React.createElement(\"div\",{className:\"grey-text\"},/*#__PURE__*/React.createElement(MDBInput,{id:\"description\",className:\"post-desc\",label:\"Description\",group:true,type:\"textarea\",validate:true,onChange:function onChange(e){return setDescription(e.target.value);},value:description})),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center rounded-0\"},/*#__PURE__*/React.createElement(MDBBtn,{className:\"rounded-0\",color:\"elegant\",type:\"submit\"},\"SAVE CHANGES\")))))));};export default UpdatePost;","map":{"version":3,"sources":["/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/src/posts/pages/UpdatePost.js"],"names":["React","useState","useParams","useHistory","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","CardCatalog","CommonLoading","UpdatePost","props","isLoading","setIsLoading","location","state","description","setDescription","history","postId","postUpdateHandler","e","preventDefault","apiOptions","method","headers","body","JSON","stringify","fetch","process","env","REACT_APP_BACKEND_URL","then","res","json","push","sessionStorage","getItem","target","value"],"mappings":"8lBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,kBAAtC,CACA,OAASC,YAAT,CAAuBC,MAAvB,CAA+BC,MAA/B,CAAuCC,QAAvC,CAAiDC,MAAjD,KAA+D,UAA/D,CACA,MAAOC,CAAAA,WAAP,KAAwB,qDAAxB,CACA,OAASC,aAAT,KAA8B,gBAA9B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,eACMX,QAAQ,CAAC,KAAD,CADd,wCACrBY,SADqB,eACVC,YADU,8BAEUb,QAAQ,CAC5CW,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,WADuB,CAFlB,yCAErBA,WAFqB,eAERC,cAFQ,eAK5B,GAAMC,CAAAA,OAAO,CAAGhB,UAAU,EAA1B,CACA,GAAMiB,CAAAA,MAAM,CAAGlB,SAAS,GAAGkB,MAA3B,CAEA,GAAMC,CAAAA,iBAAiB,0FAAG,iBAAOC,CAAP,iIACxBA,CAAC,CAACC,cAAF,GACAT,YAAY,CAAC,IAAD,CAAZ,CACMU,UAHkB,CAGL,CACjBC,MAAM,CAAE,OADS,CAEjBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFQ,CAGjBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBZ,WAAW,CAAXA,WADmB,CAAf,CAHW,CAHK,CAWxBa,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,qBAAhB,mBAA+Cb,MAA/C,EAAyDI,UAAzD,CAAL,CACGU,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAACC,GAAD,CAAS,CACbjB,cAAc,CAAC,EAAD,CAAd,CACAJ,YAAY,CAAC,KAAD,CAAZ,CACAK,OAAO,CAACkB,IAAR,YAAiBC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAjB,YACD,CANH,EAXwB,sDAAH,kBAAjBlB,CAAAA,iBAAiB,4CAAvB,CAoBA,GAAI,CAACD,MAAL,CAAa,CACX,mBACE,2BAAK,SAAS,CAAC,QAAf,eACE,uDADF,CADF,CAKD,CAED,GAAIP,SAAJ,CAAe,CACb,mBAAO,oBAAC,aAAD,EAAe,KAAK,CAAC,MAArB,EAAP,CACD,CAED,mBACE,oBAAC,WAAD,EAAa,SAAS,CAAC,WAAvB,eACE,oBAAC,YAAD,mBACE,oBAAC,MAAD,mBACE,oBAAC,MAAD,mBACE,4BAAM,QAAQ,CAAEQ,iBAAhB,eACE,yBAAG,SAAS,CAAC,SAAb,2BADF,cAEE,2BAAK,SAAS,CAAC,WAAf,eACE,oBAAC,QAAD,EACE,EAAE,CAAC,aADL,CAEE,SAAS,CAAC,WAFZ,CAGE,KAAK,CAAC,aAHR,CAIE,KAAK,KAJP,CAKE,IAAI,CAAC,UALP,CAME,QAAQ,KANV,CAOE,QAAQ,CAAE,kBAACC,CAAD,QAAOJ,CAAAA,cAAc,CAACI,CAAC,CAACkB,MAAF,CAASC,KAAV,CAArB,EAPZ,CAQE,KAAK,CAAExB,WART,EADF,CAFF,cAcE,2BAAK,SAAS,CAAC,uBAAf,eACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,WAAlB,CAA8B,KAAK,CAAC,SAApC,CAA8C,IAAI,CAAC,QAAnD,iBADF,CAdF,CADF,CADF,CADF,CADF,CADF,CA8BD,CAtED,CAwEA,cAAeN,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport { CommonLoading } from \"react-loadingg\";\n\nconst UpdatePost = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [description, setDescription] = useState(\n    props.location.state.description\n  );\n  const history = useHistory();\n  const postId = useParams().postId;\n\n  const postUpdateHandler = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const apiOptions = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        description,\n      }),\n    };\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/posts/${postId}`, apiOptions)\n      .then((res) => res.json())\n      .then((res) => {\n        setDescription(\"\");\n        setIsLoading(false);\n        history.push(`/${sessionStorage.getItem(\"creator\")}/posts`);\n      });\n  };\n\n  if (!postId) {\n    return (\n      <div className=\"center\">\n        <h2>Cannot find your post.</h2>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return <CommonLoading color=\"grey\" />;\n  }\n\n  return (\n    <CardCatalog className=\"post-form\">\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <form onSubmit={postUpdateHandler}>\n              <p className=\"h5 mb-5\">Edit description here:</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  id=\"description\"\n                  className=\"post-desc\"\n                  label=\"Description\"\n                  group\n                  type=\"textarea\"\n                  validate\n                  onChange={(e) => setDescription(e.target.value)}\n                  value={description}\n                />\n              </div>\n              <div className=\"text-center rounded-0\">\n                <MDBBtn className=\"rounded-0\" color=\"elegant\" type=\"submit\">\n                  SAVE CHANGES\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </CardCatalog>\n  );\n};\n\nexport default UpdatePost;\n"]},"metadata":{},"sourceType":"module"}