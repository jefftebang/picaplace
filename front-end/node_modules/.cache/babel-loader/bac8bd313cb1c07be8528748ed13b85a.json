{"ast":null,"code":"var _jsxFileName = \"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN (Academind)/fligno/front-end/src/user/pages/Users.js\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport UsersCatalog from \"../components/UsersCatalog\";\nimport axios from \"axios\";\n\nconst Users = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(undefined);\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await axios.get(\"http://localhost:5001/api/users\");\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, !isLoading && loadedUsers && /*#__PURE__*/React.createElement(UsersCatalog, {\n    bits: loadedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }));\n};\n\nexport default Users;","map":{"version":3,"sources":["/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN (Academind)/fligno/front-end/src/user/pages/Users.js"],"names":["React","useEffect","useState","Fragment","UsersCatalog","axios","Users","props","isLoading","setIsLoading","error","setError","undefined","loadedUsers","setLoadedUsers","sendRequest","response","get","responseData","json","ok","Error","message","users","err","errorHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACU,SAAD,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,WAAW,GAAG,YAAY;AAC9BN,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACF,cAAMO,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,iCAAV,CAAvB;AAEA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AAEA,YAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AACD;;AAEDR,QAAAA,cAAc,CAACI,YAAY,CAACK,KAAd,CAAd;AACAd,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAXD,CAWE,OAAOe,GAAP,EAAY;AACZb,QAAAA,QAAQ,CAACa,GAAG,CAACF,OAAL,CAAR;AACD;;AACDb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAjBD;;AAkBAM,IAAAA,WAAW;AACZ,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,QAAMU,YAAY,GAAG,MAAM;AACzBd,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,SAAD,IAAcK,WAAd,iBAA6B,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,CADF;AAKD,CApCD;;AAsCA,eAAeP,KAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport UsersCatalog from \"../components/UsersCatalog\";\nimport axios from \"axios\";\n\nconst Users = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(undefined);\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\"http://localhost:5001/api/users\");\n\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    sendRequest();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <Fragment>\n      {!isLoading && loadedUsers && <UsersCatalog bits={loadedUsers} />}\n    </Fragment>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}