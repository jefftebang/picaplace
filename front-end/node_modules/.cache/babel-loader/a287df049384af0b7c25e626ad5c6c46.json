{"ast":null,"code":"var _jsxFileName = \"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/src/user/pages/Users.js\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport UsersCatalog from \"../components/UsersCatalog\";\nimport { CommonLoading } from \"react-loadingg\";\n\nconst Users = props => {\n  const [isLoading, setIsLoading] = useState(false); // eslint-disable-next-line\n\n  const [error, setError] = useState(undefined);\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(process.env.REACT_APP_BACKEND_URL + \"/users/users\");\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(CommonLoading, {\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, !isLoading && loadedUsers && /*#__PURE__*/React.createElement(UsersCatalog, {\n    bits: loadedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }));\n};\n\nexport default Users;","map":{"version":3,"sources":["/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/src/user/pages/Users.js"],"names":["React","useEffect","useState","Fragment","UsersCatalog","CommonLoading","Users","props","isLoading","setIsLoading","error","setError","undefined","loadedUsers","setLoadedUsers","sendRequest","response","fetch","process","env","REACT_APP_BACKEND_URL","responseData","json","ok","Error","message","users","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C,CADuB,CAEvB;;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACU,SAAD,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,WAAW,GAAG,YAAY;AAC9BN,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACF,cAAMO,QAAQ,GAAG,MAAMC,KAAK,CAC1BC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,cADV,CAA5B;AAIA,cAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAT,EAA3B;;AAEA,YAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AACD;;AAEDX,QAAAA,cAAc,CAACO,YAAY,CAACK,KAAd,CAAd;AACAjB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAbD,CAaE,OAAOkB,GAAP,EAAY;AACZhB,QAAAA,QAAQ,CAACgB,GAAG,CAACF,OAAL,CAAR;AACD;;AACDhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAnBD;;AAoBAM,IAAAA,WAAW;AACZ,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,MAAIP,SAAJ,EAAe;AACb,wBAAO,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,SAAD,IAAcK,WAAd,iBAA6B,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,CADF;AAKD,CAvCD;;AAyCA,eAAeP,KAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport UsersCatalog from \"../components/UsersCatalog\";\nimport { CommonLoading } from \"react-loadingg\";\n\nconst Users = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState(undefined);\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_BACKEND_URL + \"/users/users\"\n        );\n\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    sendRequest();\n  }, []);\n\n  if (isLoading) {\n    return <CommonLoading color=\"grey\" />;\n  }\n\n  return (\n    <Fragment>\n      {!isLoading && loadedUsers && <UsersCatalog bits={loadedUsers} />}\n    </Fragment>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}