{"ast":null,"code":"var _jsxFileName = \"/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/src/posts/pages/UserPosts.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport PostsCatalog from \"../components/PostsCatalog\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { CommonLoading } from \"react-loadingg\";\nimport { useHttp } from \"../../global/components/front-end-comps/http\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport { MDBBtn } from \"mdbreact\";\n\nconst UserPosts = () => {\n  const [loadedPosts, setLoadedPosts] = useState();\n  const {\n    isLoading,\n    sendRequest\n  } = useHttp();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const resData = await sendRequest(`http://localhost:5001/api/posts/user/${userId}`);\n        setLoadedPosts(resData);\n      } catch (err) {}\n    };\n\n    fetchPosts();\n  }, [sendRequest, userId]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(CommonLoading, {\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \" \", !isLoading && loadedPosts && /*#__PURE__*/React.createElement(PostsCatalog, {\n    bits: loadedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }\n  }));\n};\n\nexport default UserPosts;","map":{"version":3,"sources":["/Users/zemiragabrielle/Documents/Jeff's/Web Development Course/MERN/fligno/front-end/src/posts/pages/UserPosts.js"],"names":["React","useEffect","Fragment","PostsCatalog","useParams","Link","useState","CommonLoading","useHttp","CardCatalog","MDBBtn","UserPosts","loadedPosts","setLoadedPosts","isLoading","sendRequest","userId","fetchPosts","resData","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,OAAT,QAAwB,8CAAxB;AACA,OAAOC,WAAP,MAAwB,qDAAxB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AACA,QAAM;AAAEQ,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BP,OAAO,EAA1C;AAEA,QAAMQ,MAAM,GAAGZ,SAAS,GAAGY,MAA3B;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMH,WAAW,CAC9B,wCAAuCC,MAAO,EADhB,CAAjC;AAGAH,QAAAA,cAAc,CAACK,OAAD,CAAd;AACD,OALD,CAKE,OAAOC,GAAP,EAAY,CAAE;AACjB,KAPD;;AAQAF,IAAAA,UAAU;AACX,GAVQ,EAUN,CAACF,WAAD,EAAcC,MAAd,CAVM,CAAT;;AAYA,MAAIF,SAAJ,EAAe;AACb,wBAAO,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEG,CAACA,SAAD,IAAcF,WAAd,iBAA6B,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhC,CADF;AAMD,CA5BD;;AA8BA,eAAeD,SAAf","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\nimport PostsCatalog from \"../components/PostsCatalog\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { CommonLoading } from \"react-loadingg\";\nimport { useHttp } from \"../../global/components/front-end-comps/http\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport { MDBBtn } from \"mdbreact\";\n\nconst UserPosts = () => {\n  const [loadedPosts, setLoadedPosts] = useState();\n  const { isLoading, sendRequest } = useHttp();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const resData = await sendRequest(\n          `http://localhost:5001/api/posts/user/${userId}`\n        );\n        setLoadedPosts(resData);\n      } catch (err) {}\n    };\n    fetchPosts();\n  }, [sendRequest, userId]);\n\n  if (isLoading) {\n    return <CommonLoading color=\"grey\" />;\n  }\n\n  return (\n    <Fragment>\n      {\" \"}\n      {!isLoading && loadedPosts && <PostsCatalog bits={loadedPosts} />}\n    </Fragment>\n  );\n};\n\nexport default UserPosts;\n"]},"metadata":{},"sourceType":"module"}