{"version":3,"sources":["global/components/front-end-comps/Avatar.js","global/components/front-end-comps/CardCatalog.js","user/components/UserBit.js","user/components/UsersCatalog.js","user/pages/Users.js","posts/pages/NewPost.js","global/components/Navbar/MainWrap.js","global/context/UserContext.js","global/components/Navbar/NavLinks.js","global/components/Navbar/SideBar.js","global/components/front-end-comps/Shadow.js","global/components/Navbar/MainNav.js","global/components/front-end-comps/Modal.js","global/components/front-end-comps/Map.js","global/components/front-end-comps/http.js","posts/components/PostBit.js","posts/components/PostsCatalog.js","posts/pages/UserPosts.js","posts/pages/UpdatePost.js","global/components/front-end-comps/ErrorNotice.js","user/pages/Login.js","user/pages/SignUp.js","App.js","index.js"],"names":["Avatar","props","className","style","src","alt","width","height","CardCatalog","children","UserBit","userClick","postCount","id","image","name","to","UsersCatalog","bits","length","map","user","key","posts","Users","useState","isLoading","setIsLoading","undefined","setError","loadedUsers","setLoadedUsers","useEffect","a","fetch","process","response","json","responseData","ok","Error","message","users","sendRequest","color","NewPost","address","setAddress","description","setDescription","history","useHistory","onSubmit","e","preventDefault","apiOptions","method","headers","body","JSON","stringify","creator","sessionStorage","getItem","then","res","push","label","group","type","validate","error","success","onChange","target","value","MainWrap","createContext","NavLinks","setUserData","useContext","UserContext","exact","onClick","token","clear","SideBar","sideBarContent","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","ReactDom","createPortal","document","getElementById","Shadow","ReactDOM","MainNav","sideBarIsOpen","setSideBarIsOpen","closeSideBarHandler","ModalView","modalContent","headerClass","header","event","contentClass","footerClass","footer","Modal","Map","setMap","mapContainer","useRef","center","zoom","mapboxgl","accessToken","container","current","Longitude","Latitude","Marker","setLngLat","addTo","on","resize","inputs","getElementsByTagName","switchLayer","layer","layerId","setStyle","addControl","NavigationControl","i","onclick","initializeMap","ref","el","defaultChecked","for","useHttp","activeHttpRequests","useCallback","url","httpAbortCtrl","AbortController","signal","filter","reqCtrl","forEach","abortCtrl","abort","clearError","PostBit","openMap","setOpenMap","openConfirm","setOpenConfirm","closeDeleteHandler","submitDeleteHandler","onDelete","location","padding","creatorId","pathname","state","PostsCatalog","post","_id","onDeletePost","UserPosts","loadedPosts","setLoadedPosts","userId","useParams","resData","fetchPosts","onDeletePlace","deletedPost","oldPosts","UpdatePost","postId","postUpdateHandler","ErrorNotice","Login","email","setEmail","password","setPassword","loginSubmitHandler","loginUser","axios","loginRes","setItem","data","window","replace","msg","icon","required","Auth2","setName","passwordCheck","setPasswordCheck","signupSubmitHandler","newUser","md","htmlFor","App","routes","userData","localStorage","get","userRes","checkLoggedIn","path","component","SignUp","Provider","render"],"mappings":"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","file":"static/js/main.c064d71e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Avatar.css\";\n\nconst Avatar = (props) => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src=\"https://picsum.photos/200\"\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport \"./CardCatalog.css\";\n\nconst CardCatalog = (props) => {\n  return (\n    <div className={`card-catalog ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default CardCatalog;\n","import React from \"react\";\nimport \"./UserBit.css\";\nimport Avatar from \"../../global/components/front-end-comps/Avatar\";\nimport { Link } from \"react-router-dom\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\n\nconst UserBit = (props) => {\n  const postCount = props.postCount;\n\n  let userClick;\n  if (postCount === 0) {\n    userClick = (\n      <div id=\"noClick\">\n        <div className=\"user-bit__image\">\n          <Avatar image={props.image} alt={props.name} />\n        </div>\n        <div className=\"user-bit__info\">\n          <h4>{props.name}</h4>\n          <h6>\n            {props.postCount} {props.postCount <= 1 ? \"Post\" : \"Posts\"}\n          </h6>\n        </div>\n      </div>\n    );\n  } else {\n    userClick = (\n      <Link to={`/${props.id}/posts`}>\n        <div className=\"user-bit__image\">\n          <Avatar image={props.image} alt={props.name} />\n        </div>\n        <div className=\"user-bit__info\">\n          <h4>{props.name}</h4>\n          <h6>\n            {props.postCount} {props.postCount <= 1 ? \"Post\" : \"Posts\"}\n          </h6>\n        </div>\n      </Link>\n    );\n  }\n\n  return (\n    <li className=\"user-bit__li\">\n      <CardCatalog className=\"user-bit__content user-bit\">\n        {userClick}\n      </CardCatalog>\n    </li>\n  );\n};\n\nexport default UserBit;\n","import React from \"react\";\nimport \"./UsersCatalog.css\";\nimport UserBit from \"./UserBit\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\n\nconst UsersCatalog = (props) => {\n  if (props.bits.length === 0) {\n    return (\n      <div className=\"center\">\n        <CardCatalog>\n          <h2>No users to show.</h2>\n        </CardCatalog>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-catalog\">\n      {props.bits.map((user) => (\n        <UserBit\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          postCount={user.posts.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersCatalog;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport UsersCatalog from \"../components/UsersCatalog\";\nimport { CommonLoading } from \"react-loadingg\";\n\nconst Users = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState(undefined);\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_BACKEND_URL + \"/users/users\"\n        );\n\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    sendRequest();\n  }, []);\n\n  if (isLoading) {\n    return <CommonLoading color=\"grey\" />;\n  }\n\n  return (\n    <Fragment>\n      {!isLoading && loadedUsers && <UsersCatalog bits={loadedUsers} />}\n    </Fragment>\n  );\n};\n\nexport default Users;\n","import React, { useState } from \"react\";\nimport \"./NewPost.css\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport { CommonLoading } from \"react-loadingg\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NewPost = () => {\n  const [address, setAddress] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const postSubmitHandler = (e) => {\n    setIsLoading(true);\n    e.preventDefault();\n    const apiOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        address,\n        description,\n        creator: sessionStorage.getItem(\"creator\"),\n      }),\n    };\n\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/posts\", apiOptions)\n      .then((res) => res.json())\n      .then((res) => {\n        setIsLoading(false);\n        setAddress(\"\");\n        setDescription(\"\");\n        history.push(`/${sessionStorage.getItem(\"creator\")}/posts`);\n      });\n  };\n\n  if (isLoading) {\n    return <CommonLoading color=\"grey\" />;\n  }\n\n  return (\n    <CardCatalog className=\"post-form\">\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <form onSubmit={postSubmitHandler}>\n              <p className=\"h5 mb-4\">Create new post here:</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  id=\"address\"\n                  label=\"Address\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={(e) => setAddress(e.target.value)}\n                />\n                <MDBInput\n                  id=\"description\"\n                  className=\"post-desc\"\n                  label=\"Description\"\n                  group\n                  type=\"textarea\"\n                  validate\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n              <div className=\"text-center rounded-0\">\n                <MDBBtn type=\"submit\" className=\"rounded-0\" color=\"elegant\">\n                  POST\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </CardCatalog>\n  );\n};\n\nexport default NewPost;\n","import React from \"react\";\nimport \"./MainWrap.css\";\n\nconst MainWrap = (props) => {\n  return <header className=\"main-wrap\">{props.children}</header>;\n};\n\nexport default MainWrap;\n","import { createContext } from \"react\";\n\nexport default createContext(null);\n","import React, { useContext, Fragment } from \"react\";\nimport \"./NavLinks.css\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport UserContext from \"../../../global/context/UserContext\";\n\nconst NavLinks = (props) => {\n  const { setUserData } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const logout = () => {\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    sessionStorage.clear();\n    history.push(\"/login\");\n  };\n\n  return (\n    <ul className=\"nav-links\">\n      {sessionStorage.creator && (\n        <Fragment>\n          <li>\n            <NavLink to=\"/users\" exact>\n              Users\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/posts/new\">Add Post</NavLink>\n          </li>\n          <li>\n            <NavLink to={`/${sessionStorage.getItem(\"creator\")}/posts`}>\n              {sessionStorage.name}\n            </NavLink>\n          </li>\n        </Fragment>\n      )}\n      {sessionStorage.creator && (\n        <li>\n          <NavLink to=\"\" onClick={logout}>\n            Logout\n          </NavLink>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport \"./SideBar.css\";\nimport ReactDom from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst SideBar = (props) => {\n  const sideBarContent = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside onClick={props.onClick} className=\"side-bar\">\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDom.createPortal(\n    sideBarContent,\n    document.getElementById(\"side-bar\")\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport \"./Shadow.css\";\nimport ReactDOM from \"react-dom\";\n\nconst Shadow = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"shadow\" onClick={props.onClick}></div>,\n    document.getElementById(\"shadow\")\n  );\n};\n\nexport default Shadow;\n","import React, { Fragment } from \"react\";\nimport \"./MainNav.css\";\nimport MainWrap from \"./MainWrap\";\nimport { Link } from \"react-router-dom\";\nimport NavLinks from \"./NavLinks\";\nimport SideBar from \"./SideBar\";\nimport { useState } from \"react\";\nimport Shadow from \"../front-end-comps/Shadow\";\n\nconst MainNav = (props) => {\n  const [sideBarIsOpen, setSideBarIsOpen] = useState(false);\n\n  const openSideBarHandler = () => {\n    setSideBarIsOpen(true);\n  };\n\n  const closeSideBarHandler = () => {\n    setSideBarIsOpen(false);\n  };\n\n  return (\n    <Fragment>\n      {sideBarIsOpen && <Shadow onClick={closeSideBarHandler} />}\n      <SideBar show={sideBarIsOpen} onClick={closeSideBarHandler}>\n        <nav className=\"main-nav__side-bar\">\n          <NavLinks />\n        </nav>\n      </SideBar>\n      <MainWrap>\n        <button className=\"main-nav__menu-btn\" onClick={openSideBarHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-nav__title\">\n          <Link to=\"/\" className=\"logo1\">\n            <span>Picaplace</span>\n          </Link>\n        </h1>\n        <nav className=\"main-nav__wrap-nav\">\n          <NavLinks />\n        </nav>\n      </MainWrap>\n    </Fragment>\n  );\n};\n\nexport default MainNav;\n","import React, { Fragment } from \"react\";\nimport \"./Modal.css\";\nimport ReactDOM from \"react-dom\";\nimport Shadow from \"./Shadow\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst ModalView = (props) => {\n  const modalContent = (\n    <div className={`modal1 ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h6>{props.header}</h6>\n        <button onClick={props.onClick} className=\"x-btn\">\n          X\n        </button>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(\n    modalContent,\n    document.getElementById(\"openModal\")\n  );\n};\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {props.show && <Shadow onClick={props.onClick} />}\n      <CSSTransition\n        in={props.show}\n        timeout={200}\n        classNames=\"modal\"\n        mountOnEnter\n        unmountOnExit\n      >\n        <ModalView {...props} />\n      </CSSTransition>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useRef, useState, Fragment } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Map.css\";\n\nconst Map = (props) => {\n  const [map, setMap] = useState(null);\n  const mapContainer = useRef(null);\n\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n        center: [center.Longitude, center.Latitude],\n        zoom: zoom,\n      });\n\n      // eslint-disable-next-line\n      const marker = new mapboxgl.Marker()\n        .setLngLat([center.Longitude, center.Latitude])\n        .addTo(map);\n\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n      let layerList = document.getElementById(\"menu\");\n      let inputs = layerList.getElementsByTagName(\"input\");\n\n      function switchLayer(layer) {\n        let layerId = layer.target.id;\n        map.setStyle(\"mapbox://styles/mapbox/\" + layerId);\n      }\n      map.addControl(new mapboxgl.NavigationControl());\n\n      for (let i = 0; i < inputs.length; i++) {\n        inputs[i].onclick = switchLayer;\n      }\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, [center, zoom, map]);\n\n  return (\n    <Fragment>\n      <div ref={(el) => (mapContainer.current = el)} className=\"map\"></div>\n      <div id=\"menu\">\n        <input\n          id=\"streets-v11\"\n          type=\"radio\"\n          name=\"rtoggle\"\n          value=\"streets\"\n          defaultChecked=\"checked\"\n        />{\" \"}\n        <label for=\"streets-v11\" className=\"spacer\">\n          Streets\n        </label>\n        <input id=\"light-v10\" type=\"radio\" name=\"rtoggle\" value=\"light\" />{\" \"}\n        <label for=\"light-v10\" className=\"spacer\">\n          Light\n        </label>\n        <input id=\"dark-v10\" type=\"radio\" name=\"rtoggle\" value=\"dark\" />{\" \"}\n        <label for=\"dark-v10\" className=\"spacer\">\n          Dark\n        </label>\n        <input id=\"outdoors-v11\" type=\"radio\" name=\"rtoggle\" value=\"outdoors\" />{\" \"}\n        <label for=\"outdoors-v11\" className=\"spacer\">\n          Outdoors\n        </label>\n        <input\n          id=\"satellite-v9\"\n          type=\"radio\"\n          name=\"rtoggle\"\n          value=\"satellite\"\n        />{\" \"}\n        <label for=\"satellite-v9\" className=\"spacer\">\n          Satellite\n        </label>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useState, Fragment } from \"react\";\nimport \"./PostBit.css\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport Modal from \"../../global/components/front-end-comps/Modal\";\nimport Map from \"../../global/components/front-end-comps/Map\";\nimport { MDBBtn } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../global/components/front-end-comps/Avatar\";\nimport { useHttp } from \"../../global/components/front-end-comps/http\";\nimport { CommonLoading } from \"react-loadingg\";\n\nconst PostBit = (props) => {\n  const { isLoading, sendRequest } = useHttp();\n  const [openMap, setOpenMap] = useState(false);\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const openMapHandler = () => {\n    setOpenMap(true);\n  };\n\n  const closeMapHandler = () => {\n    setOpenMap(false);\n  };\n\n  const openDeleteHandler = () => {\n    setOpenConfirm(true);\n  };\n\n  const closeDeleteHandler = () => {\n    setOpenConfirm(false);\n  };\n\n  const submitDeleteHandler = async () => {\n    setOpenConfirm(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/posts/${props.id}`,\n        \"DELETE\"\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        show={openMap}\n        header={props.address}\n        contentClass=\"post-bit__modal-content\"\n        onClick={closeMapHandler}\n      >\n        <div className=\"map-wrap\">\n          <Map center={props.location} zoom={15} />\n        </div>\n      </Modal>\n      <Modal\n        className=\"modal-prompt\"\n        show={openConfirm}\n        onClick={closeDeleteHandler}\n        header=\"DELETE\"\n        footerClass=\"post-bit__modal-actions\"\n        footer={\n          <Fragment>\n            <hr />\n            <div className=\"delete-footer\">\n              <MDBBtn\n                className=\"post-btn rounded-0\"\n                color=\"grey grey lighten-1\"\n                onClick={closeDeleteHandler}\n              >\n                CANCEL\n              </MDBBtn>\n              <MDBBtn\n                className=\"post-btn rounded-0\"\n                color=\"grey grey lighten-1\"\n                onClick={submitDeleteHandler}\n              >\n                DELETE\n              </MDBBtn>\n            </div>\n          </Fragment>\n        }\n      >\n        <p style={{ padding: \"1rem 3rem\" }}>\n          Are you sure you want to delete this post? It cannot be undone after.\n        </p>\n      </Modal>\n      <li className=\"post-bit\">\n        <CardCatalog className=\"post-bit__content\">\n          {isLoading && <CommonLoading color=\"grey\" />}\n          {/* <div className=\"post-head\">\n            <p className=\"creatorName\">\n              <strong>Ctreator Name</strong>\n            </p>\n          </div> */}\n          <div className=\"post-bit__image\">\n            <div className=\"user__image\">\n              <Avatar image={props.image} alt={props.name} />\n            </div>\n            <img src={props.image} alt={props.location} />\n          </div>\n          <div className=\"post-bit__info\">\n            <p>\n              <strong>{props.address}</strong>\n            </p>\n            <p className=\"post-bit__desc\">\n              {props.name} {props.description}\n            </p>\n          </div>\n          <div className=\"post-bit__actions\">\n            <MDBBtn onClick={openMapHandler} className=\"rounded-0 post-btn\">\n              VIEW ON MAP\n            </MDBBtn>\n            {sessionStorage.creator === props.creatorId && (\n              <Fragment>\n                <Link\n                  to={{\n                    pathname: `/posts/${props.id}`,\n                    state: {\n                      description: props.description,\n                    },\n                  }}\n                >\n                  <MDBBtn className=\"rounded-0 post-btn\">EDIT</MDBBtn>\n                </Link>\n                <MDBBtn\n                  onClick={openDeleteHandler}\n                  className=\"rounded-0 post-btn\"\n                >\n                  DELETE\n                </MDBBtn>\n              </Fragment>\n            )}\n          </div>\n        </CardCatalog>\n      </li>\n    </Fragment>\n  );\n};\n\nexport default PostBit;\n","import React from \"react\";\nimport \"./PostsCatalog.css\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport PostBit from \"./PostBit\";\nimport { MDBBtn } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\n\nconst PostsCatalog = (props) => {\n  if (props.bits.length === 0) {\n    return (\n      <div className=\"post-catalog center\">\n        <CardCatalog className=\"px-5\">\n          <h3 className=\"py-3\">No posts to show.</h3>\n          <Link to=\"/posts/new\">\n            <MDBBtn type=\"submit\" className=\"rounded-0\" color=\"elegant\">\n              Create Post\n            </MDBBtn>\n          </Link>\n        </CardCatalog>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"post-catalog\">\n      {props.bits.map((post) => (\n        <PostBit\n          key={post._id}\n          id={post._id}\n          image={post.image}\n          address={post.address}\n          description={post.description}\n          creatorId={post.creator}\n          location={post.location}\n          onDelete={props.onDeletePost}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PostsCatalog;\n","import React, { useEffect, Fragment } from \"react\";\nimport PostsCatalog from \"../components/PostsCatalog\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { CommonLoading } from \"react-loadingg\";\nimport { useHttp } from \"../../global/components/front-end-comps/http\";\n\nconst UserPosts = () => {\n  const [loadedPosts, setLoadedPosts] = useState();\n  const { isLoading, sendRequest } = useHttp();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const resData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/posts/user/${userId}`\n        );\n        setLoadedPosts(resData);\n      } catch (err) {}\n    };\n    fetchPosts();\n  }, [sendRequest, userId]);\n\n  const postDeleteHandler = (deletedPost) => {\n    setLoadedPosts((oldPosts) =>\n      oldPosts.filter((post) => post.id !== deletedPost)\n    );\n  };\n\n  if (isLoading) {\n    return <CommonLoading color=\"grey\" />;\n  }\n\n  return (\n    <Fragment>\n      {\" \"}\n      {!isLoading && loadedPosts && (\n        <PostsCatalog bits={loadedPosts} onDeletePlace={postDeleteHandler} />\n      )}\n    </Fragment>\n  );\n};\n\nexport default UserPosts;\n","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport { CommonLoading } from \"react-loadingg\";\n\nconst UpdatePost = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [description, setDescription] = useState(\n    props.location.state.description\n  );\n  const history = useHistory();\n  const postId = useParams().postId;\n\n  const postUpdateHandler = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const apiOptions = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        description,\n      }),\n    };\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/posts/${postId}`, apiOptions)\n      .then((res) => res.json())\n      .then((res) => {\n        setDescription(\"\");\n        setIsLoading(false);\n        history.push(`/${sessionStorage.getItem(\"creator\")}/posts`);\n      });\n  };\n\n  if (!postId) {\n    return (\n      <div className=\"center\">\n        <h2>Cannot find your post.</h2>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return <CommonLoading color=\"grey\" />;\n  }\n\n  return (\n    <CardCatalog className=\"post-form\">\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <form onSubmit={postUpdateHandler}>\n              <p className=\"h5 mb-5\">Edit description here:</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  id=\"description\"\n                  className=\"post-desc\"\n                  label=\"Description\"\n                  group\n                  type=\"textarea\"\n                  validate\n                  onChange={(e) => setDescription(e.target.value)}\n                  value={description}\n                />\n              </div>\n              <div className=\"text-center rounded-0\">\n                <MDBBtn className=\"rounded-0\" color=\"elegant\" type=\"submit\">\n                  SAVE CHANGES\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </CardCatalog>\n  );\n};\n\nexport default UpdatePost;\n","import React from \"react\";\nimport \"./ErrorNotice.css\";\n\nexport default function ErrorNotice(props) {\n  return (\n    <div className=\"error-notice\">\n      <span>{props.message}</span>\n      <button onClick={props.clearError}>X</button>\n    </div>\n  );\n}\n","import React, { useState, Fragment } from \"react\";\nimport \"./Auth.css\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ErrorNotice from \"../../global/components/front-end-comps/ErrorNotice\";\n\nconst Login = () => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState();\n\n  const loginSubmitHandler = async (e) => {\n    e.preventDefault();\n    // login\n    try {\n      const loginUser = { email, password };\n      const loginRes = await axios.post(\n        process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n        loginUser\n      );\n\n      await sessionStorage.setItem(\"creator\", loginRes.data.user.id);\n      await sessionStorage.setItem(\"token\", loginRes.data.token);\n      await sessionStorage.setItem(\"name\", loginRes.data.user.name);\n      window.location.replace(\"/users\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Fragment>\n      <CardCatalog className=\"log-form\">\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol>\n              <form className=\"needs-validation\" onSubmit={loginSubmitHandler}>\n                <p className=\"h5 mb-5 text-center\">Login</p>\n                {error && (\n                  <ErrorNotice\n                    message={error}\n                    clearError={() => setError(undefined)}\n                    className=\"text-center\"\n                  />\n                )}\n                <div className=\"grey-text\">\n                  <MDBInput\n                    id=\"email\"\n                    label=\"Email\"\n                    group\n                    icon=\"envelope\"\n                    type=\"email\"\n                    required\n                    error=\"wrong\"\n                    success=\"right\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <MDBInput\n                    id=\"password\"\n                    label=\"Password\"\n                    icon=\"lock\"\n                    group\n                    required\n                    type=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"text-center\">\n                  <MDBBtn type=\"submit\" className=\"rounded-0\" color=\"elegant\">\n                    LOGIN\n                  </MDBBtn>\n                </div>\n              </form>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </CardCatalog>\n      <CardCatalog className=\"log-form log2\">\n        <p>\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\n        </p>\n      </CardCatalog>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useState, Fragment, useContext } from \"react\";\nimport \"./Auth.css\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\nimport CardCatalog from \"../../global/components/front-end-comps/CardCatalog\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport UserContext from \"../../global/context/UserContext\";\nimport axios from \"axios\";\nimport ErrorNotice from \"../../global/components/front-end-comps/ErrorNotice\";\n\nconst Auth2 = () => {\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [error, setError] = useState();\n  const history = useHistory();\n  const { setUserData } = useContext(UserContext);\n\n  const signupSubmitHandler = async (e) => {\n    e.preventDefault();\n    // sign up\n    try {\n      const newUser = {\n        name,\n        email,\n        password,\n        passwordCheck,\n      };\n      await axios.post(\n        process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\n        newUser\n      );\n      setUserData({\n        token: undefined,\n        user: undefined,\n      });\n      history.push(\"/login\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Fragment>\n      <CardCatalog className=\"log-form\">\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol>\n              <form className=\"needs-validation\" onSubmit={signupSubmitHandler}>\n                <p className=\"h5 mb-5 text-center\">Sign up</p>\n                {error && (\n                  <ErrorNotice\n                    message={error}\n                    clearError={() => setError(undefined)}\n                    className=\"text-center\"\n                  />\n                )}\n                <div className=\"grey-text\">\n                  <MDBInput\n                    id=\"name\"\n                    label=\"Name\"\n                    group\n                    icon=\"user\"\n                    type=\"text\"\n                    required\n                    error=\"wrong\"\n                    success=\"right\"\n                    onChange={(e) => setName(e.target.value)}\n                  />\n\n                  <MDBInput\n                    id=\"email\"\n                    label=\"Email\"\n                    group\n                    icon=\"envelope\"\n                    type=\"email\"\n                    required\n                    error=\"wrong\"\n                    success=\"right\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <MDBInput\n                    id=\"password\"\n                    label=\"Password\"\n                    icon=\"lock\"\n                    group\n                    required\n                    type=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <MDBInput\n                    id=\"passwordCheck\"\n                    label=\"Confirm Password\"\n                    icon=\"lock\"\n                    group\n                    required\n                    type=\"password\"\n                    onChange={(e) => setPasswordCheck(e.target.value)}\n                  />\n                </div>\n                <MDBCol md=\"\" className=\"mb-3\">\n                  <div className=\"custom-control custom-checkbox pl-3\">\n                    <input\n                      className=\"custom-control-input\"\n                      type=\"checkbox\"\n                      value=\"\"\n                      id=\"invalidCheck\"\n                      required\n                    />\n                    <label\n                      className=\"custom-control-label agree\"\n                      htmlFor=\"invalidCheck\"\n                    >\n                      Agree to terms and conditions\n                    </label>\n                    <div className=\"invalid-feedback\">\n                      You must agree before submitting.\n                    </div>\n                  </div>\n                </MDBCol>\n\n                <div className=\"text-center\">\n                  <MDBBtn type=\"submit\" className=\"rounded-0\" color=\"elegant\">\n                    SIGN UP\n                  </MDBBtn>\n                </div>\n              </form>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </CardCatalog>\n      <CardCatalog className=\"log-form log2\">\n        <p>\n          Have an account? <Link to=\"/login\">Login</Link>\n        </p>\n      </CardCatalog>\n    </Fragment>\n  );\n};\n\nexport default Auth2;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport Users from \"./user/pages/Users\";\nimport NewPost from \"./posts/pages/NewPost\";\nimport MainNav from \"./global/components/Navbar/MainNav\";\nimport UserPosts from \"./posts/pages/UserPosts\";\nimport UpdatePost from \"./posts/pages/UpdatePost\";\nimport Login from \"./user/pages/Login\";\nimport SignUp from \"./user/pages/SignUp\";\nimport UserContext from \"./global/context/UserContext\";\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"x-auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"x-auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await axios.post(\n        process.env.REACT_APP_BACKEND_URL + \"/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await axios.get(\n          \"REACT_APP_BACKEND_URL/api/api/users/users\",\n          {\n            headers: { \"x-auth-token\": token },\n          }\n        );\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  let routes;\n  if (sessionStorage.token) {\n    routes = (\n      <Switch>\n        <Route path=\"/users\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/posts\" exact>\n          <UserPosts />\n        </Route>\n        <Route path=\"/posts/new\" exact>\n          <NewPost />\n        </Route>\n        <Route path=\"/posts/:postId\" component={UpdatePost} />\n        <Redirect to=\"/users\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Redirect to=\"/login\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <Router>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <MainNav />\n        {routes}\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n// MDBReact\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}